/*
 * Onboarding API
 *  The onboarding API allows you to refer your customers and personal contacts to Brex. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Applicant;
import com.konfigthis.client.model.ContactPreference;
import com.konfigthis.client.model.CreateDocumentRequest;
import com.konfigthis.client.model.CreateReferralRequest;
import com.konfigthis.client.model.CreateReferralRequestBusiness;
import com.konfigthis.client.model.Document;
import com.konfigthis.client.model.DocumentType;
import com.konfigthis.client.model.Referral;
import com.konfigthis.client.model.ReferralPage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReferralsApi
 */
@Disabled
public class ReferralsApiTest {

    private static ReferralsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ReferralsApi(apiClient);
    }

    /**
     * Creates a referral
     *
     * This creates new referrals. The response will contain an identifier and a unique personalized link to an application flow. Many fields are optional and when they&#39;re provided they&#39;ll prefill the application flow for Brex.  You should handle and store these references securely as they contain sensitive information about the referral.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewReferralTest() throws ApiException {
        String referralCode = null;
        Applicant applicant = null;
        CreateReferralRequestBusiness business = null;
        ContactPreference contactPreference = null;
        Referral response = api.createNewReferral(referralCode, applicant)
                .business(business)
                .contactPreference(contactPreference)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets a referral by ID
     *
     * Returns a referral object by ID if it exists.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String id = null;
        Referral response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * List referrals
     *
     * Returns referrals created. *Note*: This doesn&#39;t include referrals that have expired. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        String cursor = null;
        ReferralPage response = api.getList()
                .cursor(cursor)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new document upload
     *
     *  The &#x60;uri&#x60; will be a presigned S3 URL allowing you to upload the referral doc securely. This URL can only be used for a &#x60;PUT&#x60; operation and expires 30 minutes after its creation. Once your upload is complete, we will use this to prefill the application.  Refer to these [docs](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html) on how to upload to this presigned S3 URL. We highly recommend using one of AWS SDKs if they&#39;re available for your language to upload these files. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadDocumentTest() throws ApiException {
        DocumentType type = null;
        String id = null;
        Document response = api.uploadDocument(type, id)
                .execute();
        // TODO: test validations
    }

}
