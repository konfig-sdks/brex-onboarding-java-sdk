/*
 * Onboarding API
 *  The onboarding API allows you to refer your customers and personal contacts to Brex. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Type of document being submitted. Allowable types: - ARTICLES_OF_INCORPORATION - IRS_EIN_CONFIRMATION (IRS CP 575 or 147C form) - IRS_EIN_APPLICATION (IRS SS4 form) - CERTIFICATE_GOOD_STANDING 
 */
@JsonAdapter(DocumentType.Adapter.class)public enum DocumentType {
  
  ARTICLES_OF_INCORPORATION("ARTICLES_OF_INCORPORATION"),
  
  IRS_EIN_CONFIRMATION("IRS_EIN_CONFIRMATION"),
  
  IRS_EIN_APPLICATION("IRS_EIN_APPLICATION"),
  
  CERTIFICATE_GOOD_STANDING("CERTIFICATE_GOOD_STANDING");

  private String value;

  DocumentType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DocumentType fromValue(String value) {
    for (DocumentType b : DocumentType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DocumentType> {
    @Override
    public void write(final JsonWriter jsonWriter, final DocumentType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DocumentType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DocumentType.fromValue(value);
    }
  }
}

