/*
 * Onboarding API
 *  The onboarding API allows you to refer your customers and personal contacts to Brex. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * When set to &#x60;EMAIL_OUTBOUND&#x60;, Brex will email the referred prospective customer directly to prompt them to create their account rather than rely on you to direct them to claim the account. If not provided, you are responsible for contacting the prospect and the value defaults to &#x60;NO_OUTBOUND&#x60;.
 */
@JsonAdapter(ContactPreference.Adapter.class)public enum ContactPreference {
  
  NO_OUTBOUND("NO_OUTBOUND"),
  
  EMAIL_OUTBOUND("EMAIL_OUTBOUND");

  private String value;

  ContactPreference(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ContactPreference fromValue(String value) {
    for (ContactPreference b : ContactPreference.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ContactPreference> {
    @Override
    public void write(final JsonWriter jsonWriter, final ContactPreference enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ContactPreference read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ContactPreference.fromValue(value);
    }
  }
}

